---

# Consul user and group
consul_user:  consul
consul_group: consul

# Create the consul user and group
consul_create_user: true

consul_version: 1.0.0

# Configuration file extension
consul_config_ext: json

consul_bin:  /usr/local/bin/consul
consul_dest: "/opt/consul/{{consul_version}}"

# get_url validate_certs
# In case you are running on an old python version
# you might want to toggle this to false if you get
# an error like 'Failed to validate the SSL certificate'
consul_download_validate_certs: true

consul_arch:     "{{ (ansible_architecture == 'x86_64') | ternary('amd64', 'i386') }}"
consul_package:  "consul_{{consul_version}}_linux_{{consul_arch}}.zip"
consul_base_url: "https://releases.hashicorp.com/consul/{{consul_version}}"
consul_url:      "{{consul_base_url}}/{{consul_package}}"
consul_package_dest: /usr/local/src

# Start consul at boot time
#
consul_start_at_boot: true

# The following toggle will start consul on a plabook execution
# or prevent it (even handlers).
# This might turn handy when building images that should have a
# clean start (nothing in the data dir)
consul_started: true

# Disable by default the installation of consul's logrotate config file
consul_logrotate_enabled: false
consul_logrotate_config: |
  /var/log/consul {
    create 0644 {{consul_user}} {{consul_group}}
    daily
    rotate 7
    copytruncate
    delaycompress
    compress
    missingok
    notifempty
  }

consul_config_dir: /etc/consul.d
consul_data_dir: /var/consul

# Daemon options to be passed through consul options file
# (/etc/default/consul or /etc/sysconfig/consul)
#
#consul_daemon_options: "-join some.server.bar"

# Consul config
# consul_config is a hash where the item key represents the
# config file name, and it's value is a json block (without the
# main curly brackets). This allows for flexible configuration
# like:
#
# consul_config:
#   00_service: |
#     "server": true,
#     "domain": "test",
#     "datacenter": "vagrant"
#
consul_config: {}

# vi:ts=2:sw=2:et:ft=yaml
